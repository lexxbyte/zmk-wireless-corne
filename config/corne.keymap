#include <dt-bindings/zmk/mouse.h>
#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

// Pointer and scroll

#define ZMK_POINTING_DEFAULT_MOVE_VAL 2500  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 30    // default: 10

#define ___ &trans 

/*

   &mmv_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

   &msc_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

 */

&lt { tapping-term-ms = <175>; };

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };

        rgb_encoder: rgb_encoder {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
        };

        scroll_encoder: scroll_encoder {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

            tap-ms = <30>;
        };

        layer_mod: layer_modifier {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <125>;
            bindings = <&kp>, <&tog>;
        };

        mod_sticky_layer: mod_sticky_layer {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&kp>, <&sl>;
        };

        caps_word_mod: caps_word_mod {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&kp>, <&caps_word>;
        };
    };

    combos {
        compatible = "zmk,combos";

        aura_layer {
            bindings = <&mo 4>;
            key-positions = <42 47>;
        };

        delete_word {
            bindings = <&delete_word_macos>;
            timeout-ms = <50>;
            key-positions = <17 23>;
        };

        left_parenthesis {
            bindings = <&kp LEFT_PARENTHESIS>;
            timeout-ms = <50>;
            key-positions = <4 15 16>;
        };

        right_parenthesis {
            bindings = <&kp RIGHT_PARENTHESIS>;
            timeout-ms = <50>;
            key-positions = <8 24 25>;
        };

        left_bracket {
            bindings = <&kp LEFT_BRACKET>;
            timeout-ms = <50>;
            key-positions = <17 16 15>;
        };

        right_bracket {
            bindings = <&kp RIGHT_BRACKET>;
            timeout-ms = <50>;
            key-positions = <23 24 25>;
        };

        left_curly {
            bindings = <&kp LEFT_BRACE>;
            timeout-ms = <50>;
            key-positions = <32 15 16>;
        };

        right_curly {
            bindings = <&kp RBRC>;
            timeout-ms = <50>;
            key-positions = <37 24 25>;
        };

        equlas_arrow {
            bindings = <&equals_arrow>;
            timeout-ms = <50>;
            key-positions = <14 15 16>;
        };

        minus_arrow {
            bindings = <&minus_arrow>;
            timeout-ms = <50>;
            key-positions = <24 25 26>;
        };

        backslash {
            bindings = <&kp BACKSLASH>;
            key-positions = <2 16 32>;
        };

        slash {
            bindings = <&kp SLASH>;
            key-positions = <37 24 10>;
        };

        lt {
            bindings = <&kp LESS_THAN>;
            key-positions = <15 3 4>;
        };

        gt {
            bindings = <&kp GREATER_THAN>;
            key-positions = <8 9 25>;
        };

        colon_equals {
            bindings = <&colon_equals>;
            timeout-ms = <50>;
            key-positions = <14 26>;
        };

        pipe {
            bindings = <&kp PIPE>;
            key-positions = <30 31 32>;
        };

        tmux_prefix {
            bindings = <&kp LC(F1)>;
            key-positions = <15 26>;
        };

        terminal_prefix {
            bindings = <&kp LC(F2)>;
            key-positions = <25 26>;
        };

        leader_key_mac_os {
            bindings = <&kp LC(F3)>;
            key-positions = <23 26>;
        };
    };

    macros {
        delete_word_macos: delete_word_macos {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(BACKSPACE)>;
        };

        delete_word_linux: delete_word_linux {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(BACKSPACE)>;
        };

        equals_arrow: equals_arrow {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp EQUAL &kp GT>;
        };

        minus_arrow: minus_arrow {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp MINUS &kp GT>;
        };

        colon_equals: colon_equals {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp COLON &kp EQUAL>;
        };

        macos_homerow: macos_homerow {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LG(SPACE)) &to 0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            display-name = "Base";
            bindings = <
  &tog 3               &kp Q   &kp W   &kp E          &kp R           &kp T                                               &mmv MOVE_UP                           &kp Y         &kp U                &kp I                   &kp O     &kp P      &kp BACKSLASH
  &mt LEFT_SHIFT TAB   &kp A   &kp S   &kp D          &kp F           &kp G                              &mmv MOVE_LEFT   &mkp LCLK        &mmv MOVE_RIGHT       &kp H         &kp J                &kp K                   &kp L     &kp SEMI   &kp SQT
  &kp LEFT_COMMAND     &kp Z   &kp X   &kp C          &kp V           &kp B             &kp C_MUTE                        &mmv MOVE_DOWN                         &kp N         &kp M                &kp COMMA               &kp DOT   &kp FSLH   &kp LEFT_CONTROL
                                       &kp LEFT_ALT   &kp BACKSPACE   &lt 1 SPACE                                                                                &lt 2 ENTER   &mt LEFT_SHIFT ESC   &caps_word_mod RALT 0
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        Symbols {
            display-name = "Symbols";
            bindings = <
  ___   &kp N1            &kp N2        &kp N3     &kp N4       &kp N5                                              &msc SCRL_UP                           &kp N6      &kp N7          &kp N8         &kp N9                 &kp N0                  ___
  ___   &kp UNDERSCORE    &kp MINUS     &kp PLUS   &kp EQUAL    &kp GRAVE                          &msc SCRL_LEFT   &mkp RCLK        &msc SCRL_RIGHT       &kp TILDE   &none           &kp SLASH      &kp DOT                &kp COMMA               ___
  ___   &kp EXCLAMATION   &kp AT_SIGN   &kp HASH   &kp DOLLAR   &kp PERCENT       &kp C_MUTE                        &msc SCRL_DOWN                         &kp CARET   &kp AMPERSAND   &kp ASTERISK   &kp LEFT_PARENTHESIS   &kp RIGHT_PARENTHESIS   ___
                                        ___        ___          ___                                                                                        &kp SPACE   ___             ___
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        Fnavol {
            display-name = "Fnavol";
            bindings = <
  &kp F1   &kp F2                 &kp F3                 &kp F4           &kp F5             &kp F6                                      &mmv MOVE_UP                           &kp F7           &kp F8     &kp F9         &kp F10     &kp F11      &kp F12
  ___      &kp C_VOL_DN           &kp C_VOLUME_UP        &kp C_PREVIOUS   &kp C_PLAY_PAUSE   &kp C_NEXT                 &mmv MOVE_LEFT   &mkp LCLK        &mmv MOVE_RIGHT       &kp LEFT_ARROW   &kp DOWN   &kp UP_ARROW   &kp RIGHT   &kp C_MUTE   ___
  ___      &kp C_BRIGHTNESS_DEC   &kp C_BRIGHTNESS_INC   ___              ___                ___              ___                        &mmv MOVE_DOWN                         &kp HOME         ___        ___            &kp END     ___          ___
                                                         ___              ___                ___                                                                                ___              ___        ___
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        Mouse {
            display-name = "Mouse";
            bindings = <
  &to 0   ___   ___              &msc SCRL_UP     &macos_homerow    &kp ESCAPE                       ___             &kp ESCAPE   ___              &mmv MOVE_UP     ___               ___   ___
  ___     ___   &msc SCRL_LEFT   &msc SCRL_DOWN   &msc SCRL_RIGHT   &mkp MCLK                  ___   ___   ___       &mkp MCLK    &mmv MOVE_LEFT   &mmv MOVE_DOWN   &mmv MOVE_RIGHT   ___   ___
  ___     ___   ___              ___              ___               ___              ___             ___             ___          ___              ___              ___               ___   ___
                                 ___              &mkp MB4          &mkp LCLK                                        &mkp RCLK    &mkp MB5         ___
            >;
        };

        Aura {
            bindings = <
  &studio_unlock   &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2        &bt BT_SEL 3       &bt BT_SEL 4                       ___             &rgb_ug RGB_HUD   &rgb_ug RGB_HUI   &rgb_ug RGB_SAD   &rgb_ug RGB_SAI   &rgb_ug RGB_BRD   &rgb_ug RGB_BRI
  ___              &bt BT_PRV     &bt BT_NXT     &ext_power EP_OFF   &ext_power EP_ON   &bt BT_CLR                   ___   ___   ___       &rgb_ug RGB_OFF   &rgb_ug RGB_ON    &rgb_ug RGB_EFR   &rgb_ug RGB_EFF   &rgb_ug RGB_SPD   &rgb_ug RGB_SPI
  ___              &out OUT_BLE   &out OUT_USB   ___                 ___                ___                ___             ___             ___               ___               ___               ___               ___               ___
                                                 ___                 ___                ___                                                ___               ___               ___
            >;

            label = "Aura";
        };
    };
};
